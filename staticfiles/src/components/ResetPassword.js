import{c as o,e as l,a as m,j as s,B as n,f as c,A as u,T as d,o as h}from"../../vendor.js";import{p}from"../redux/actions/userActions.js";import{F as x}from"./FormContainer.js";import{u as f,c as S,e as j,S as b}from"../../async-vendor.js";import"../../__commonjsHelpers__.js";import"../redux/constants/userConstants.js";import"../redux/constants/orderContants.js";const F=()=>{const i=o(),{error:r,success:t}=l(a=>a.userPasswordReset),e=f({initialValues:{email:""},validationSchema:S({email:j().email("Invalid email format").required("Email is required")}),onSubmit:async a=>{await i(p(a.email))}});return m.useEffect(()=>{t&&b.fire({title:"Success!",text:"Password reset email sent successfully.",icon:"success"})},[t]),s.jsx(x,{children:s.jsxs(n,{sx:{flexGrow:1,p:3},children:[s.jsx(c,{variant:"h4",gutterBottom:!0,align:"center",children:"Reset Password"}),r&&s.jsx(u,{severity:"error",children:r}),s.jsxs("form",{onSubmit:e.handleSubmit,children:[s.jsx(d,{fullWidth:!0,id:"email",name:"email",label:"Email",variant:"outlined",value:e.values.email,onChange:e.handleChange,error:e.touched.email&&!!e.errors.email,helperText:e.touched.email&&e.errors.email,sx:{mb:2}}),s.jsx(h,{color:"primary",variant:"contained",fullWidth:!0,type:"submit",disabled:e.isSubmitting,children:"Send Reset Email"})]})]})})};export{F as default};
